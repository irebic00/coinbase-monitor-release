apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "message-bus-kafka.name" . }}
  labels:
    app: {{ template "message-bus-kafka.name" . }}
    release: {{ .Release.Name }}
    {{- include "message-bus-kafka.helm-labels" . | indent 4 }}
  annotations:
    {{- include "message-bus-kafka.product-info" . | indent 4 }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "message-bus-kafka.name" . }}
  serviceName: {{ template "message-bus-kafka.name" . }}
  replicas: {{ .Values.replicaCount }}
  podManagementPolicy: OrderedReady
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: {{ quote .Values.global.istio.sidecar.inject }}
        {{- include "message-bus-kafka.product-info" . | indent 8 }}
      labels:
        {{- include "message-bus-kafka.helm-labels" . | indent 8 }}
    spec:
      containers:
        - name: kafka
          image: wurstmeister/kafka
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9092
              name: kafka-client
          env:
            - name: KAFKA_ADVERTISED_PORT
              value: "9092"
            - name: BROKER_ID_COMMAND
              value: "hostname | cut -d'-' -f2"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: {{ .Values.global.services.zookeeper.hostname }}:{{ .Values.global.services.zookeeper.port }}
            - name: KAFKA_LISTENERS
              value: "PLAINTEXT://:9092"
            - name: KAFKA_JMX_OPTS
              value: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.local.only=false -Djava.rmi.server.hostname=127.0.0.1"
            - name: KAFKA_BROKER_ID
              value: "0"